import pandas as pd
from pandas import Series,DataFrame
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
sns.set_style('whitegrid')
%matplotlib inline
import pandas as pd
from pandas import Series,DataFrame
from pandas_datareader import data as wb

tech_list = ['AAPL','GOOG','MSFT','AMZN']
end = datetime.now()
start = datetime(end.year-1,end.month,end.day)

for stock in tech_list:
    globals()[stock] = wb.DataReader(stock,"yahoo",start,end)
    
    
AAPL['Adj Close'].plot(legend=True, figsize=(15,5))

AAPL['Volume'].plot(legend=True,figsize=(15,5))

AAPL['Daily Return'] = AAPL['Adj Close'].pct_change()

AAPL['Daily Return'].plot(legend=True,figsize=(15,5),linestyle='--',marker='o')


import seaborn as sns
sns.distplot(AAPL['Daily Return'].dropna(),bins=100,color='purple')

AAPL['Daily Return'].hist(bins=100)

GOOG['Adj Close'].plot(legend=True,figsize=(10,4))

GOOG['Daily Return']=GOOG['Adj Close'].pct_change()
GOOG['Daily Return'].plot(legend=True,figsize=(15,5),linestyle='--',marker='o')

import seaborn as sns
sns.jointplot('GOOG','GOOG',tech_rets,kind='scatter',color='seagreen')


#monte carlo simulation:

days = 365
dt = 1/days
mu = rets.mean()['GOOG']
sigma = rets.std()['GOOG']

def stock_monte_carlo(start_price,days,mu,sigma):
    price = np.zeros(days)
    price[0] = start_price
    
    shock = np.zeros(days)
    drift = np.zeros(days)
    
    for x in xrange(1,days):
        shock[x] = np.random.normal(loc=mu*dt, scale=sigma*np.sqrt(dt))
        drift[x] = mu * dt
        price[x] = price[x-1] + (price[x-1]*(drift[x] + shock[x]))
                                 
    return price
    
start_price = 590.74 

for run in xrange(1000):
    plt.plot(stock_monte_carlo(start_price,days,mu,sigma))

    plt.xlabel('Days')
    plt.ylabel('Price')
    plt.title('Monte Carlo Analysis for Google')


